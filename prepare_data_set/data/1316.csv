Journal_link,Archives_link,Archives_year,Article_link,English_sentence,Thai_sentence
https://ph02.tci-thaijo.org/index.php/eit-researchjournal/issue/archive/3,https://ph02.tci-thaijo.org/index.php/eit-researchjournal/issue/view/12759,2019,https://ph02.tci-thaijo.org/index.php/eit-researchjournal/article/view/166654,"This paper presents a branch and bound algorithm for the solution of the Probabilistic Traveling Salesman Problem with Return. The algorithm is composed of three main steps. In the first step, branching divides the problem into smaller subproblems that are easier and quicker to handle. All possible solutions are then checked for feasibility by comparing with the boundaries (lower and upper bounds).  The second step, known as bounding, is to find lower and upper bounds for the solution at each node that are continually refined over time. A feasible solution must lie between these bounds.  In the third step, called node selection, the jump-tracking strategy chooses a node with the best result to process.  For obtaining the optimal solution, many iterations are executed until the shortest route is identified.  A computer program was developed based on the algorithm, and number of test cases have been solved in an acceptable time; a 15 city problem took less than a second, and a 800 city problem required about 30 minutes.",งานวิจัยนี้ได้นำหลักการของการแตกกิ่งและกำหนดขอบเขตมาสร้างอัลกอริทึมที่ใช้สำหรับแก้ปัญหาการเดินทางของพนักงานขายภายใต้ความน่าจะเป็นที่กลับไปยังจุดเริ่มเดินทาง   กระบวนการประกอบด้วย 3 ขั้นตอนหลัก    ขั้นตอนการแตกกิ่งเป็นขั้นแรกของการดำเนินการเกี่ยวข้องกับการแบ่งแยกปัญหาออกเป็นปัญหาย่อยขนาดเล็กลงเพื่อช่วยให้แก้ไขปัญหาได้ง่ายและรวดเร็วขึ้น  คำตอบของแต่ละปัญหาย่อยจะถูกตรวจสอบความสมเหตุสมผลต่อไปโดยเปรียบเทียบกับขีดจำกัดบนและขีดจำกัดล่าง  ขั้นที่สองคือการกำหนดค่าขอบเขตทั้งขอบเขตบนและขอบเขตล่างจะได้รับการปรับค่าให้ดีขึ้นกว่าเดิม โดยคำตอบที่เป็นไปได้จะอยู่ในช่วงขอบเขตบนและขอบเขตล่างเท่านั้น    ขั้นที่สามคือการเลือกโหนดด้วยวิธีการโดดข้ามกิ่งไปแก้ปัญหาย่อยที่ให้ผลลัพธ์ดีที่สุดก่อน อัลกอริทึมจะทำงานไปเรื่อยๆ ผ่านการคำนวณหลายรอบจนกระทั่งค้นพบคำตอบที่เหมาะสมที่สุด  คำตอบดังกล่าวคือลำดับการเดินทางที่ให้เส้นทางที่สั้นที่สุด  ขั้นตอนข้างต้นยังได้ถูกนำไปพัฒนาต่อเป็นโปรแกรมคอมพิวเตอร์ที่สามารถหาผลเฉลยได้ในเวลาที่ยอมรับได้ เช่น ขนาดเมือง 15 เมืองใช้เวลาประมวลผลไม่ถึงวินาทีและจำนวนเมือง 800 เมืองใช้เวลาคำนวณประมาณ 30 นาที
